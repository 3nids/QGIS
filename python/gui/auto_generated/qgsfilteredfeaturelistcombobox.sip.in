/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsfilteredfeaturelistcombobox.h                             *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/








class QgsFilteredFeatureListComboBox : QWidget
{
%Docstring
This offers a combobox with autocompleter that allows selecting features from a layer with a series of comobobox to filter features

The combobox is a QgsFeatureListComboBox

.. seealso:: :py:class:`QgsFeatureListComboBox`

.. versionadded:: 3.10
%End

%TypeHeaderCode
#include "qgsfilteredfeaturelistcombobox.h"
%End
  public:
    explicit QgsFilteredFeatureListComboBox( QWidget *parent = 0 );


    QgsVectorLayer *sourceLayer() const;
%Docstring
The layer from which features should be listed.
%End

    void setSourceLayer( QgsVectorLayer *sourceLayer );
%Docstring
The layer from which features should be listed.
%End

    QStringList filterFields() const;
%Docstring
Returns the fields names used as filters
%End

    void setFilterFields( const QStringList &filterFields );
%Docstring
Returns the fields names used as filters
%End

    QString displayExpression() const;
%Docstring
The display expression will be used to display features as well as
the value to match the typed text against.
%End

    void setDisplayExpression( const QString &displayExpression );
%Docstring
The display expression will be used to display features as well as
the value to match the typed text against.
%End

    QString filterExpression() const;
%Docstring
An additional expression to further restrict the available features.
This can be used to integrate additional spatial or other constraints.
%End

    int nullIndex() const;
%Docstring
Returns the current index of the NULL value, or -1 if NULL values are
not allowed.
%End

    void setFilterExpression( const QString &filterExpression );
%Docstring
An additional expression to further restrict the available features.
This can be used to integrate additional spatial or other constraints.
%End

    QVariant identifierValue() const;
%Docstring
The identifier value of the currently selected feature. A value from the
identifierField.
%End

    void setIdentifierValue( const QVariant &identifierValue );
%Docstring
The identifier value of the currently selected feature. A value from the
identifierField.
%End

    QgsFeatureRequest currentFeatureRequest() const;
%Docstring
Shorthand for getting a feature request to query the currently selected
feature.
%End

    bool allowNull() const;
%Docstring
Determines if a NULL value should be available in the list.
%End

    void setAllowNull( bool allowNull );
%Docstring
Determines if a NULL value should be available in the list.
%End

    QString identifierField() const;
%Docstring
Field name that will be used to uniquely identify the current feature.
Normally the primary key of the layer.
%End

    void setIdentifierField( const QString &identifierField );
%Docstring
Field name that will be used to uniquely identify the current feature.
Normally the primary key of the layer.
%End

  signals:

    void filterFieldsChanged();
%Docstring
Filters fields have changed
%End

    void modelUpdated();
%Docstring
The underlying model has been updated.
%End

    void sourceLayerChanged();
%Docstring
The layer from which features should be listed.
%End

    void displayExpressionChanged();
%Docstring
The display expression will be used to display features as well as
the the value to match the typed text against.
%End

    void filterExpressionChanged();
%Docstring
An additional expression to further restrict the available features.
This can be used to integrate additional spatial or other constraints.
%End

    void identifierValueChanged();
%Docstring
The identifier value of the currently selected feature. A value from the
identifierField.
%End

    void identifierFieldChanged();
%Docstring
Field name that will be used to uniquely identify the current feature.
Normally the primary key of the layer.
%End

    void allowNullChanged();
%Docstring
Determines if a NULL value should be available in the list.
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsfilteredfeaturelistcombobox.h                             *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
